name: Build application

on: [push, release]

jobs:
  build:

    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    - name: Set up gon
      run: |
        brew tap mitchellh/gon
        brew install mitchellh/gon/gon
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Rebuild lxml from source
      run: |
        pip install --no-binary :all: lxml
      env:
        STATIC_DEPS: "true"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run py2app
      run: python3 setup.py py2app
    - name: Thin package
      run: |
        rm -rf dist/FontBakery.app/Contents/Resources/lib/python3.8/PyQt5/Qt/lib/Qt{Designer}*
        rm -rf dist/FontBakery.app/Contents/Resources/lib/python3.8/PyQt5/Qt/qml/
    - name: Codesign ots-sanitize
      run : |
        unzip dist/FontBakery.app/Contents/Resources/lib/python38.zip ots/ots-sanitize
         codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist --options runtime ots/ots-sanitize
         zip dist/FontBakery.app/Contents/Resources/lib/python38.zip ots/ots-sanitize
    - name: Codesign ttfautohint
      run : |
        unzip dist/FontBakery.app/Contents/Resources/lib/python38.zip ttfautohint/libttfautohint.dylib
         codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist ttfautohint/libttfautohint.dylib
         zip dist/FontBakery.app/Contents/Resources/lib/python38.zip ttfautohint/libttfautohint.dylib
    - name: Codesign package
      run: |
        codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist -o runtime `find dist/FontBakery.app -name '*.so' -or -name '*.dylib' -or -name '*.framework'` || true
        codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist -o runtime `find dist/FontBakery.app -type f | grep 'framework/Versions/5/'` || true
        codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist -o runtime `find dist/FontBakery.app -type f | grep 'framework/Versions/5/'` || true
        codesign -s "Developer ID Application: Simon Cozens (GHYRZM4TBD)" -v --deep --timestamp --entitlements entitlements.plist -o runtime dist/FontBakery.app
    - name: Package app
      run: |
        ditto -c -k --keepParent "dist/FontBakery.app" dist/FontBakery.zip
    - name: Notarize app
      run: |
        gon gon.json
      env:
        AC_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}
        AC_PROVIDER: ${{ secrets.NOTARIZE_PROVIDER }}
    - name: Staple app
      run: |
        xcrun stapler staple dist/FontBakery.app
        xcrun stapler validate dist/FontBakery.app
    - name: Repackage stapled app
      run: |
        rm -rf dist/FontBakery.zip
        ditto -c -k --keepParent "dist/FontBakery.app" dist/FontBakery.zip
    - name: Archive production artifacts
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v2
      with:
        name: FontBakery-OSX.zip
        path: dist/FontBakery.zip
    - name: Get release
      if: github.event_name == 'release'
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload release binary
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: dist/FontBakery.zip
        asset_name: FontBakery-OSX-${{steps.get_release.outputs.tag_name}}.zip
        asset_content_type: application/octet-stream
